BASIC SYNTAX:

- using system means that we can use ckasses frin the system namespace
- namespace is used to organize your code, and it is a container for classes and other namespace
- curly brackets {} marks the beginning and end of a block of code
- class is a container for data and methods, which brings functionality to your program.
    - Every line of code that runs in C# must be inside a class
        -EX: class named Program
- main method always appears in a C# program. Any code inside its curly brackets will be executed
- Console is a class of the System namespace, which has a WriteLine() method that is used to ouput/print text

NOTE: Every C# statment ends in a semicolon
NOTE: C# is case sensitive

*** SUPER NOTE ***
CAN"T HAVE TWO MAINS IN THE SAME FOLDER

COMMENTS:

- // <- single line comment
- /**/ <- multi line comment 
- ctrl / <- keyboard shortcut in vs code to comment all lines out

VARIABLES:

- Types
    - int: stores integers
    - double: stores floating point numbers
    - char: stores single charactes
    - string: stores text
    - bool: stores true or false

- if you don't want others to overwrite use const
- can combine both text and variable or variable and variable using + regradless of typing
- more than one varibale can be created and assigned at the same time
    - int x = 5, y = 6, z = 50;
    - int a, b, c;

NOTE: All varaibles must be identified with unique names

DATA TYPES:

- int = 4 bytes
- long = 8 bytes
- float = 4 bytes
- double = 8 bytes
- bool = 1 bytes
- char = 2 bytes
- string = 2 bytes per char

- integer types stores whole numbers, postive or negative without decimals i.e. int and long
- Floating point types represents number with a fractional part containing one or more decimals i.e. float or double
    - a floating point number can also be a scientific number with an "e" to indicate the power of 10

TYPE CASTING:

- Type casting is when you assign a value of one data type to another type
    - implicit casting(automatically): converting a smaller type to a large type size
        - char -> int -> long -> float -> double
    - explict casting(manually): converting larger type into a smaller size type
        - double -> float -> long -> int -> char

     

